-- == بداية مكتبة الأيمبوت ==
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")

local localPlayer = Players.LocalPlayer
local camera = Workspace.CurrentCamera

local FOVring

local function performProtection()
    if not getgenv().settings.enable_protection then return end
    -- حماية وهمية (يمكن تطويرها لاحقًا)
end

local function isEnemy(player)
    if not getgenv().settings.teamCheck then return true end
    return player.Team == nil or localPlayer.Team == nil or player.Team ~= localPlayer.Team
end

local function isAlive(player)
    return player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0
end

local function isPartVisible(part)
    if not getgenv().settings.wallCheck then return true end
    local origin = camera.CFrame.Position
    local direction = (part.Position - origin).Unit
    local distance = (part.Position - origin).Magnitude
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = {localPlayer.Character, part.Parent}
    params.FilterType = Enum.RaycastFilterType.Blacklist
    params.IgnoreWater = true
    local result = Workspace:Raycast(origin, direction * distance, params)
    return not result
end

local function isWithinFov(pos)
    local dir = (pos - camera.CFrame.Position).Unit
    local angle = math.deg(math.acos(camera.CFrame.LookVector:Dot(dir)))
    return angle <= getgenv().settings.fov
end

local function getClosestEnemy()
    local closest, shortest = nil, math.huge
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= localPlayer and isEnemy(p) and isAlive(p) then
            local head = p.Character and p.Character:FindFirstChild("Head")
            if head and isPartVisible(head) and isWithinFov(head.Position) then
                local dist = (head.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
                if dist < shortest then
                    shortest = dist
                    closest = head
                end
            end
        end
    end
    return closest, shortest
end

local function predict(pos, vel)
    if getgenv().settings.enable_prediction then
        return pos + vel * getgenv().settings.predictionFactor
    else
        return pos
    end
end

local function fire()
    VirtualUser:Button1Down(Vector2.new(), camera.CFrame)
    task.wait()
    VirtualUser:Button1Up(Vector2.new(), camera.CFrame)
end

local function updateFov()
    if getgenv().settings.drawFov and getgenv().settings.enable_aimbot then
        if not FOVring then
            FOVring = Drawing.new("Circle")
            FOVring.Thickness = 2
            FOVring.Filled = false
            FOVring.Color = Color3.fromRGB(255, 0, 0)
        end
        FOVring.Visible = true
        FOVring.Position = camera.ViewportSize / 2
        FOVring.Radius = math.clamp(getgenv().settings.fov * 4, 5, 1000)
    elseif FOVring then
        FOVring.Visible = false
    end
end

RunService.RenderStepped:Connect(function()
    performProtection()
    updateFov()

    if not getgenv().settings.enable_aimbot then return end

    local target, dist = getClosestEnemy()
    if target then
        local aimPos = predict(target.Position, target.Velocity)
        local camPos = camera.CFrame.Position
        local smooth = math.clamp(1 / dist, 0.1, 0.5)
        camera.CFrame = CFrame.new(camPos, aimPos):Lerp(CFrame.new(camPos, aimPos), smooth)
        if getgenv().settings.enable_autoattack then fire() end
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Delete and FOVring then
        FOVring:Remove()
        FOVring = nil
    end
end)

print("[xxxxxTheFox Aimbot] مكتبة الأيمبوت تم تفعيلها بنجاح")
-- == نهاية مكتبة الأيمبوت ==
